// Colors
$black: #01100B;
$black-transparent: rgba(1, 16, 11, 0.5);
$chartreuse: #E8FF8E;
$chartreuse-transparent: rgba(232, 255, 142, 0.5);
$dark-linen: #E6DED3;
$forest: #006C4D;
$forest-transparent: rgba(0, 108, 77, 0.5);
$linen: #F3F0EC;
$neon: #8DFF7B;

// Spacing
$desktop: 1024px;
$tablet: 768px;
$mobile: 375px;
$desktop-margin: 48px;
$tablet-margin: 24px;
$mobile-margin: 16px;

@mixin tablet-media-query {
  @media (max-width: $tablet) and (min-width: $mobile) {
    @content;
  }
}

@mixin mobile-media-query {
  @media (max-width: $mobile) {
    @content;
  }
}

// Breakpoint-based hide/show classes

@mixin hide($breakpoint) {
  @if $breakpoint == 'desktop' {
    @media (min-width: $tablet) {
      display: none !important;
    }
  } @else if $breakpoint == 'tablet' {
    @include tablet-media-query {
      display: none !important;
    }
  } @else if $breakpoint == 'mobile' {
    @include mobile-media-query {
      display: none !important;
    }
  }
}

.desktop-hide {
  @include hide('desktop');
}

.tablet-hide {
  @include hide('tablet');
}

.mobile-hide {
  @include hide('mobile');
}

// Fonts
@font-face {
  font-family: 'UntitledSerif';
  src:  url('/assets/fonts/untitled-serif-regular.woff2') format('woff2');
}

@font-face {
  font-family: 'PPNeueBit';
  src:  url('/assets/fonts/PPNeueBit-Regular.woff2') format('woff2');
}

@font-face {
  font-family: 'PPNeueBitBold';
  src:  url('/assets/fonts/PPNeueBit-Bold.woff2') format('woff2');
}

// Layout
.page {
  font-family: 'UntitledSerif', 'Times New Roman', serif;
  height: 100%;
  width: 100%;
}

.dash-border {
  background-image:
    repeating-linear-gradient(0deg, $forest-transparent, $forest-transparent 1px, transparent 1px, transparent 2px, $forest-transparent 2px),
    repeating-linear-gradient(90deg, $forest-transparent, $forest-transparent 1px, transparent 1px, transparent 2px, $forest-transparent 2px),
    repeating-linear-gradient(180deg, $forest-transparent, $forest-transparent 1px, transparent 1px, transparent 2px, $forest-transparent 2px),
    repeating-linear-gradient(270deg, $forest-transparent, $forest-transparent 1px, transparent 1px, transparent 2px, $forest-transparent 2px);

  background-repeat: no-repeat;
  background-position: 0 0, 0 0, 100% 0, 0 100%;

  @mixin set-border($sides...) {
    // Default settings with all borders hidden
    $left-size: 0;
    $top-size: 0;
    $right-size: 0;
    $bottom-size: 0;
  
    // Check each side and update the corresponding size
    @each $side in $sides {
      @if $side == 'left' {
        $left-size: 1px 100% ;
      }
      @if $side == 'top' {
        $top-size: 100% 1px;
      }
      @if $side == 'right' {
        $right-size: 1px 100%;
      }
      @if $side == 'bottom' {
        $bottom-size: 100% 1px;
      }
    }
  
    // Apply the calculated sizes to background-size
    background-size: $left-size, $top-size, $right-size, $bottom-size;
  }
  

  // Individual and combined classes
  &--left { @include set-border('left'); }
  &--right { @include set-border('right'); }
  &--top { @include set-border('top'); }
  &--bottom { @include set-border('bottom'); }
  &--left-right { @include set-border('left', 'right'); }
  &--top-bottom { @include set-border('top', 'bottom'); }
  &--left-top { @include set-border('left', 'top'); }
  &--right-top { @include set-border('right', 'top'); }
  &--left-bottom { @include set-border('left', 'bottom'); }
  &--right-bottom { @include set-border('right', 'bottom'); }
  &--left-right-top { @include set-border('left', 'right', 'top'); }
  &--left-right-bottom { @include set-border('left', 'right', 'bottom'); }
  &--left-top-bottom { @include set-border('left', 'top', 'bottom'); }
  &--right-top-bottom { @include set-border('right', 'top', 'bottom'); }
  &--all { @include set-border('left', 'right', 'top', 'bottom'); }

  &--hide-tablet {
    @include tablet-media-query {
      background-size: 0%;
    }
  }

  &--hide-mobile {
    @include mobile-media-query {
      background-size: 0%;
    }
  }
}

@for $i from 1 through 12 {
  .col-#{$i} {
    grid-column: span #{$i};
  }
}

// Columns for tablet
@for $i from 1 through 12 {
  .col-#{$i}-tablet {
    @include tablet-media-query {
      grid-column: span #{$i};
    }
  }
}

// Columns for mobile
@for $i from 1 through 12 {
  .col-#{$i}-mobile {
    @include mobile-media-query {
      grid-column: span #{$i};
    }
  }
}

@mixin grid-layout {
  column-gap: 8px;
  display: grid;
  grid-template-columns: repeat(12, [col-start] 1fr);
}

.display-flex {
  display: flex;

  &--tablet {
    @include tablet-media-query {
      display: flex;
    }
  }

  &--mobile {
    @include mobile-media-query {
      display: flex;
    }
  }
}

.flex-end {
  align-items: flex-end;

  &--tablet {
    @include tablet-media-query {
      align-items: flex-end;
    }
  }

  &--mobile {
    @include mobile-media-query {
      align-items: flex-end;
    }
  }
}
